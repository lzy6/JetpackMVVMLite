<resources>
    <string name="app_name">JetpackMVVMLite</string>
    <string name="drawer_open">Open</string>
    <string name="drawer_close">Close</string>
    <string name="issue">发布</string>

    <string name="brief_introduction">现在找一个优秀的MVP或MVVM框架并不难，github上随便一搜就可以搜到10k以上的框架，选择使用开源优秀框架可以帮助自己快速开发，
        减少bug，增加稳定性...我以前也是这么做的,用别人的框架用了两年多，到后来我发现其实使用别人的框架是一件成本很高的事。\n
        1、成熟稳定的框架往往比较大，文件比较多，真的适合目前的项目么。\n
        2、自己更改架构，或更换某个组件，会发现很困难\n
        3、遇到架构上的问题，会想着去issues看看，很少自己去分析，依赖性太强\n
        所以我想做一个适合我，适合公司，适合项目的框架。一个优秀的代码应该是高内聚，低耦合。通过组件特性、设计模式、基本封装减少样板代码，让开发者更多的关注业务实现。开放接口。提高稳定性。
        </string>

    <string name="features">
    · 框架设计轻量，引用目前主流且较新功能偏专一的组件\n
    · kotlin的特性、高阶函数可以减少更多的样板代码，支持compose等\n
    · 更多的自定义拓展方法，实现功能更方便\n
    · jetpack组件减少代码不一致，减少开发者的学习成本\n
    · 请求API代码简约，不需要关注绑定生命周期与切换线程</string>

</resources>